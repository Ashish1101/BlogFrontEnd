{"version":3,"sources":["Components/image/background.png","Context/auth/authContext.js","Components/User/RegisterForm.js","Components/User/LoginForm.js","Context/auth/authReducer.js","Context/types.js","Context/utils/setAuthToekn.js","Context/auth/AuthState.js","Context/alert/alertContext.js","Context/alert/alertReducer.js","Context/alert/AlertState.js","Context/posts/postReducer.js","Context/posts/postContext.js","Context/posts/PostState.js","Components/Alert/Alert.js","Components/layout/Footer.js","Components/layout/Dashboard.js","Components/post/Post.js","Components/post/PostItem.js","Components/post/ShowPost.js","Components/post/SinglePost.js","Components/privateRoute.js","Components/Toolbar/SideLogo.js","Components/Toolbar/Toolbar.js","Components/Toolbar/SideDrawer.js","Components/post/Postcard.js","Components/post/DashboardPost.js","Components/Backdrop/Backdrop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","createContext","marginCon","marginTop","RegisterForm","props","authContext","useContext","history","useHistory","register","error","isAuthenticated","useEffect","push","toast","useState","name","email","password","password1","user","setUser","onchange","e","target","value","className","style","color","onSubmit","preventDefault","Data","warn","height","type","aria-describedby","onChange","LoginForm","login","clearError","success","ErrorNotify","event","setEvent","formData","console","log","state","action","payload","loading","isForgot","resetInfo","localStorage","setItem","token","removeItem","toekn","setAuthToken","axios","defaults","headers","common","AuthState","initialState","getItem","useReducer","AuthReducer","dispatch","loadUser","a","get","res","data","config","post","response","msg","forgot","resetPassword","Provider","notify","logout","children","AlertContext","alert","filter","item","id","AlertState","AlertReducer","setAlert","v4","setTimeout","imageStatus","allposts","deleteStatus","singlePost","filterPost","regex","RegExp","title","match","PostContext","PostState","PostReducer","createPost","getData","deletePost","delete","getSinglePost","GetAllPosts","clearStatus","clearLoading","text","Alert","length","map","key","Footer","left","bottom","position","role","aria-label","href","Dashboard","src","require","alt","Post","postContext","info","image","encType","editor","ClassicEditor","titleData","files","onClick","FormData","append","PostItem","date","boxShadow","to","format","width","ShowPost","_id","setText","placeholder","Spinner","animation","variant","SinglePost","params","speech","SpeechSynthesisUtterance","lang","volume","rate","pitch","window","speechSynthesis","speak","cancel","ReactHtmlParser","PrivateRoute","Component","component","rest","render","tooglerBtn","click","Toolbar","sideDrawerOpenerHandler","textDecoration","SideDrawer","username","drawerClasess","show","paddingLeft","Postcard","componetClass","zIndex","transform","top","margin","DashboardPost","toString","backDrop","App","sideDrawerOpener","open","setOpen","sideDrawer","exact","path","Dashboad","Register","Login","autoClose","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fef6c161.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.f568ba48.png\";","import  {createContext} from 'react'\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext","import React, { useState, useContext, useEffect } from 'react'\r\nimport AuthContext from '../../Context/auth/authContext'\r\n//import AlertContext from '../../Context/alert/alertContext'\r\nimport { toast } from 'react-toastify'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst RegisterForm = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    //const alertContext = useContext(AlertContext);\r\n    let history = useHistory()\r\n    //const { setAlert } = alertContext;\r\n    const { register, error, isAuthenticated } = authContext\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n           history.push('/login')\r\n                // (function () {\r\n                //     toast.success('User Registered Successfully')\r\n                // })()\r\n        }\r\n        if (error === 'Email already in use') {\r\n            toast.error(error)\r\n            // clearError();\r\n            //setAlert(error, 'danger')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [error, props.history, isAuthenticated])\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password1: ''\r\n    })\r\n\r\n    const { name, email, password, password1 } = user\r\n\r\n\r\n    const onchange = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const Data = {\r\n            name: user.name,\r\n            email: user.email,\r\n            password: user.password,\r\n            password1: user.password1\r\n        }\r\n        if (name === '' || email === '' || password === '') {\r\n            // setAlert('All fields are required', 'danger')\r\n            toast.warn('All fields required')\r\n        }\r\n        if (password !== password1) {\r\n            // setAlert('Password do not match', 'danger')\r\n            toast.warn('Password don not match')\r\n        }\r\n        else {\r\n            register(Data)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container w-50 shadow-sm global__margin\">\r\n            <h2 className=\"text-center\">Register <span style={{color:\"#0156ab\"}}>HindiMedium</span></h2>\r\n            <form className=\"container\" onSubmit={onSubmit} style={{ height: \"400px\" }}>\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label>Name</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"name\"\r\n                        onChange={onchange}\r\n                        value={name} />\r\n                </div>\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label>Email</label>\r\n                    <input type=\"email\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n\r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        onChange={onchange}\r\n                        value={email} />\r\n                </div>\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label>Password</label>\r\n                    <input type=\"password\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n\r\n                        name=\"password\"\r\n                        onChange={onchange}\r\n                        value={password} />\r\n                </div>\r\n\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n\r\n                        name=\"password1\"\r\n                        onChange={onchange}\r\n                        value={password1} />\r\n                </div>\r\n                <button type=\"submit\" style={marginCon} className=\"btn btn-block btn-outline-success my-4\">Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst marginCon = {\r\n    marginTop: \"20px\"\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport AuthContext from '../../Context/auth/authContext'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { login, error, clearError, isAuthenticated } = authContext\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            props.history.push('/');\r\n            (function () {\r\n                toast.success('Successfully logged in')\r\n            })()\r\n\r\n        }\r\n        if (error === 'Invalid Data') {\r\n            // setCount(count + 1)\r\n            // // setAlert(error, 'danger')\r\n            ErrorNotify(error)\r\n            clearError();\r\n            // clearError()\r\n            // if (count >= 1) {\r\n            //     toast.error('Forgot Password! Click Reset to Create New')\r\n            // }\r\n\r\n        }\r\n\r\n       \r\n\r\n        //eslint-disable-next-line\r\n    }, [props.history, isAuthenticated, clearError, error])\r\n\r\n\r\n\r\n\r\n    const [event, setEvent] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n\r\n\r\n    const onChange = (e) => {\r\n        setEvent({ ...event, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email === ' ' || password === '') {\r\n            // setAlert('All field required', 'success')\r\n            toast.warn(\"All fields required\")\r\n\r\n        }\r\n        const formData = {\r\n            email: event.email,\r\n            password: event.password\r\n        }\r\n        login(formData)\r\n\r\n\r\n        console.log('submitted')\r\n    }\r\n\r\n    const { email, password } = event\r\n\r\n    //toast\r\n    const ErrorNotify = (error) => toast.error(error)\r\n\r\n    return (\r\n        <>\r\n        <div className=\" container w-50 shadow-sm global__margin\">\r\n            <h2 className=\"text-center\">Login <span style={{color:\"#0156ab\"}}>HindiMedium</span></h2>\r\n            <form onSubmit={onSubmit} style={{ height: \"300px\" }}>\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label >Email</label>\r\n                    <input type=\"email\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n\r\n                        aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                <div className=\"form-group\" style={marginCon}>\r\n                    <label>Password</label>\r\n                    <input type=\"password\"\r\n                        className=\"form-control border-top-0 border-left-0 border-right-0\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        name=\"password\"\r\n\r\n                        aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                <button type=\"submit\" style={{ marginTop: \"30px\" }} className=\" btn btn-block btn-outline-success\">Login</button>\r\n            </form>\r\n        </div>\r\n   \r\n        </>\r\n    )\r\n}\r\n\r\nconst marginCon = {\r\n    marginTop: \"20px\"\r\n}\r\n\r\n\r\nexport default LoginForm\r\n","import {\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n    CLEAR_ERROR,\r\n    AUTH_ERROR,\r\n    LOAD_USER,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    FORGOT,\r\n    FORGOT_FAIL,\r\n    RESET,\r\n    RESET_FAIL\r\n} from '../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case LOAD_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case FORGOT:\r\n            return {\r\n                ...state,\r\n                isForgot: true\r\n            }\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                resetInfo: true\r\n            }\r\n\r\n        case RESET_FAIL:\r\n        case FORGOT_FAIL:\r\n            return {\r\n                ...state,\r\n                resetInfo: null,\r\n                isForgot: null,\r\n                error: action.payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: true,\r\n                user: null,\r\n                toekn: null,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return;\r\n    }\r\n}","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\r\nexport const LOAD_USER = 'LOAD_USER'\r\nexport const LOAD_FAIL = \"LOAD_FAIL\"\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const FORGOT = \"FORGOT\"\r\nexport const RESET = \"RESET\"\r\nexport const FORGOT_FAIL = \"FORGOT_FAIL\"\r\nexport const RESET_FAIL = \"RESET_FAIL\"\r\n\r\n\r\n\r\n//Alert\r\nexport const ALERT_FAIL = \"ALERT_FAIL\"\r\nexport const ALERT_SUCCESS = \"ALERT_SUCCESS\"\r\nexport const CLEAR_LOADING = \"CLEAR_LOADING\"\r\n\r\n\r\n//post\r\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\"\r\nexport const CREATE_POST_FAIL = \"CREATE_POST_FAIL\"\r\nexport const GET_ALL_POST_SUCCESS = \"GET_ALL_POST_SUCCESS\"\r\nexport const GET_ALL_POST_FAIL = \"GET_ALL_POST_FAIL\"\r\nexport const CLEAR_STATUS = \"CLEAR_STATUS\"\r\nexport const DELETE_POST = \"DELETE_POST\"\r\nexport const DELETE_POST_FAIL = \"DELETE_POST_FAIL\"\r\nexport const GET_SINGLE_POST = \"GET_SINGLE_POST\"\r\nexport const GET_SINGLE_POST_FAIL = \"GET_SINGLE_POST_FAIL\"\r\nexport const FILTER_POST_SUCCESS  = \"FILTER_POST_SUCCESS\"\r\nexport const FILTER_POST_FAIL = \"FILTER_POST_FAIL\"\r\n\r\nexport const ALL_POSTS = \"ALL_POSTS\"\r\nexport const ALL_POSTS_fAIL = \"ALL_POSTS_FAIL\"","import axios from 'axios'\r\nconst setAuthToken = (token) => {\r\n    if(token) {\r\n       axios.defaults.headers.common['x-auth-token'] = token\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n    }\r\n} \r\n\r\nexport default setAuthToken","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport axios from 'axios'\r\nimport setAuthToken from '../utils/setAuthToekn'\r\n\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  CLEAR_ERROR,\r\n  LOAD_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  FORGOT,\r\n  RESET,\r\n  FORGOT_FAIL,\r\n  RESET_FAIL\r\n} from '../types'\r\n\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    error: null,\r\n    user: null,\r\n    isForgot: false,\r\n    resetInfo: null,\r\n\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n\r\n\r\n  const loadUser = async () => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get('/auth/');\r\n      dispatch({\r\n        type: LOAD_USER,\r\n        payload: res.data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //REGISTER_USER\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n\r\n      }\r\n    }\r\n    try {\r\n      const res = await axios.post('/register/', formData, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      })\r\n      loadUser()\r\n    } catch (err) {\r\n      const response = err.response\r\n      console.log(response)\r\n      console.log(response.config.data)\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: response.data.msg\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //login User\r\n  //post request\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/auth/', formData, config);\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      })\r\n\r\n      loadUser();\r\n    } catch (err) {\r\n      const response = err.response\r\n      console.log(response)\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: response.data.msg\r\n      })\r\n    }\r\n  }\r\n\r\n  //LOGOUT\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT\r\n    })\r\n  }\r\n\r\n  const clearError = () => {\r\n    dispatch({\r\n      type: CLEAR_ERROR\r\n    })\r\n  }\r\n\r\n  //FORGOT PASSWORD ROUTE\r\n  const forgot = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n    try {\r\n      await axios.post('/forgot/', formData, config);\r\n      dispatch({\r\n        type: FORGOT\r\n      })\r\n\r\n    } catch (err) {\r\n      const response = err.response\r\n      console.log(response)\r\n      dispatch({\r\n        type: FORGOT_FAIL,\r\n        payload: response.data.msg\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // PASSWORD TOKEN\r\n  const resetPassword = async (formData, token) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n\r\n    try {\r\n      await axios.post(`/reset/${token}`, formData, config);\r\n      dispatch({\r\n        type: RESET\r\n      })\r\n    } catch (err) {\r\n      const response = err.response\r\n      dispatch({\r\n        type: RESET_FAIL,\r\n        payload: response.data.msg\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        user: state.user,\r\n        isAuthenticated: state.isAuthenticated,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        isForgot: state.isForgot,\r\n        resetInfo: state.resetInfo,\r\n        notify: state.notify,\r\n        forgot,\r\n        register,\r\n        clearError,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n        resetPassword\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import {createContext} from 'react'\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext","import {\r\n ALERT_SUCCESS,\r\n ALERT_FAIL\r\n} from '../types'\r\n\r\nexport default (state , action) => {\r\n    switch(action.type) {\r\n        case ALERT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                alert: [...state.alert , action.payload]\r\n            }\r\n        \r\n        case ALERT_FAIL: \r\n            return {\r\n                ...state,\r\n                alert: state.alert.filter(item => item.id !== action.payload)\r\n        }\r\n\r\n        default:\r\n            return\r\n    }\r\n}","import React , {useReducer} from 'react'\r\nimport AlertContext from './alertContext'\r\nimport AlertReducer from './alertReducer'\r\nimport {v4} from 'uuid'\r\n\r\nimport {\r\n    ALERT_FAIL,\r\n    ALERT_SUCCESS\r\n} from '../types'\r\n\r\nconst AlertState = (props) => {\r\n    const initialState = {\r\n        alert : []\r\n    }\r\n\r\n    const [state  , dispatch] = useReducer(AlertReducer , initialState);\r\n\r\n    const setAlert = (msg , type ) => {\r\n        const id = v4()\r\n          dispatch({\r\n              type : ALERT_SUCCESS,\r\n              payload : {id , msg , type}\r\n          })\r\n\r\n          setTimeout(() => dispatch({\r\n              type : ALERT_FAIL,\r\n              payload : id\r\n          }) , 5000)\r\n    }\r\n    \r\n    return (\r\n        <AlertContext.Provider\r\n        value={{\r\n            alert: state.alert,\r\n            setAlert\r\n        }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default AlertState\r\n","import {\r\n    CREATE_POST_FAIL,\r\n    CREATE_POST_SUCCESS,\r\n    CLEAR_STATUS,\r\n    GET_ALL_POST_SUCCESS,\r\n    GET_ALL_POST_FAIL,\r\n    CLEAR_LOADING,\r\n    DELETE_POST_FAIL,\r\n    DELETE_POST,\r\n    GET_SINGLE_POST,\r\n    GET_SINGLE_POST_FAIL,\r\n    FILTER_POST_SUCCESS,\r\n    ALL_POSTS_fAIL,\r\n    ALL_POSTS\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                imageStatus: true,\r\n                allposts: [...state.allposts, action.payload],\r\n                error: null\r\n            }\r\n\r\n        case CREATE_POST_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                imageStatus: false\r\n            }\r\n\r\n        case CLEAR_STATUS:\r\n            return {\r\n                ...state,\r\n                imageStatus: false\r\n            }\r\n\r\n        case GET_ALL_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allposts: action.payload,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        case GET_ALL_POST_FAIL:\r\n        case GET_SINGLE_POST_FAIL:\r\n            case ALL_POSTS_fAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                deleteStatus: action.payload\r\n            }\r\n        case DELETE_POST_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case GET_SINGLE_POST:\r\n            return {\r\n                ...state,\r\n                singlePost: action.payload\r\n            }\r\n        case FILTER_POST_SUCCESS:\r\n            return {\r\n                  ...state,\r\n                  filterPost: state.allposts.filter((post) => {\r\n                      const regex = new RegExp(`${action.payload}` , 'gi');\r\n                      return (\r\n                          post.title.match(regex)\r\n                      )\r\n                  })\r\n            }\r\n        case ALL_POSTS:\r\n            return {\r\n                ...state,\r\n                allposts: action.payload,\r\n                loading: true\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","import { createContext } from 'react'\r\n\r\nconst PostContext = createContext();\r\n\r\nexport default PostContext;","import React, { useReducer } from 'react'\r\nimport PostReducer from './postReducer';\r\nimport PostContext from './postContext';\r\nimport axios from 'axios'\r\nimport {\r\n    CREATE_POST_FAIL,\r\n    CREATE_POST_SUCCESS,\r\n    GET_ALL_POST_FAIL,\r\n    GET_ALL_POST_SUCCESS,\r\n    CLEAR_STATUS,\r\n    CLEAR_LOADING,\r\n    DELETE_POST,\r\n    DELETE_POST_FAIL,\r\n    GET_SINGLE_POST,\r\n    GET_SINGLE_POST_FAIL,\r\n   \r\n    ALL_POSTS,\r\n    ALL_POSTS_fAIL,\r\n    FILTER_POST_SUCCESS\r\n} from '../types'\r\n\r\nconst PostState = (props) => {\r\n    const initialState = {\r\n        error: null,\r\n        imageStatus: false,\r\n        loading: false,\r\n        deleteStatus: null,\r\n        allposts: [],\r\n        singlePost: null,\r\n        filterPost: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(PostReducer, initialState);\r\n\r\n\r\n    //create Post\r\n    const createPost = async (formData) => {\r\n\r\n        try {\r\n            const res = await axios.post('/blog/create', formData);\r\n            console.log(res.data)\r\n            debugger;\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: CREATE_POST_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            const response = err.response;\r\n            console.log(response)\r\n            dispatch({\r\n                type: CREATE_POST_FAIL,\r\n                payload: response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    //CLEAR STATUS\r\n    const clearStatus = () => {\r\n        dispatch({\r\n            type: CLEAR_STATUS\r\n        })\r\n    }\r\n\r\n    const clearLoading = () => {\r\n        dispatch({\r\n            type: CLEAR_LOADING\r\n        })\r\n    }\r\n    const getData = async (id) => {\r\n        try {\r\n            const res = await axios.get(`/blog/posts/${id}`);\r\n            dispatch({\r\n                type: GET_ALL_POST_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            //TODO TO COMPLETE THIS FUNCTION\r\n            dispatch({\r\n                type: GET_ALL_POST_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    const deletePost = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`/blog/${id}`)\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: DELETE_POST_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    //get Single Post\r\n    const getSinglePost = async (id) => {\r\n        try {\r\n            const res = await axios.get(`/blog/${id}`);\r\n            dispatch({\r\n                type: GET_SINGLE_POST,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GET_SINGLE_POST_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    const filter = (text) => {\r\n        dispatch({\r\n            type : FILTER_POST_SUCCESS,\r\n            payload: text\r\n        })\r\n    }\r\n\r\n    const GetAllPosts =  async () => {\r\n        try {\r\n            const res = axios.get('/auth/allblogs');\r\n            dispatch({\r\n                type: ALL_POSTS,\r\n                payload: (await res).data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: ALL_POSTS_fAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <PostContext.Provider value={{\r\n            allposts: state.allposts,\r\n            error: state.error,\r\n            imageStatus: state.imageStatus,\r\n            loading: state.loading,\r\n            deleteStatus: state.deleteStatus,\r\n            singlePost: state.singlePost,\r\n            filterPost:state.filterPost,\r\n            createPost,\r\n            clearStatus,\r\n            getData,\r\n            clearLoading,\r\n            deletePost,\r\n            getSinglePost,\r\n            filter,\r\n            GetAllPosts\r\n        }} >\r\n            {props.children}\r\n        </PostContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PostState","import React, { useContext } from 'react'\r\nimport AlertContext from '../../Context/alert/alertContext'\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext)\r\n    const {alert} = alertContext\r\n    return (\r\n        <div>\r\n        {alert.length > 0 &&\r\n          alert.map((item) => (\r\n            <div key={item.id} className={`alert alert-${item.type} `}>\r\n              {item.msg}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport './dashboard.css'\r\n\r\nconst Footer = () => {\r\n     //let dt = new Date()\r\n    return (\r\n         <footer style={{left:0, bottom:0, position:\"fixed\"}}>\r\n             <div>Made with <span role=\"img\" aria-label=\"emoji\">❤️</span> by Ashish </div> \r\n             {/* we can add date also */}\r\n                <div className=\"follow\">\r\n                   <div>Follow</div>\r\n                    <div className=\"iconsPadding\">\r\n                          <a href=\"https://www.instagram.com/ashishshakya98/\"><InstagramIcon color=\"primary\" /></a>\r\n                          <a href=\"https://twitter.com/shivamk321\"><TwitterIcon color=\"primary\" /></a>\r\n                         <a href=\"https://www.linkedin.com/in/ashishshakya98/\"><LinkedInIcon color=\"primary\" /></a>\r\n                           \r\n                   <a href=\"https://github.com/Ashish1101\"><GitHubIcon color=\"primary\" /></a> \r\n                    </div>\r\n                </div>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext, useEffect } from 'react'\r\nimport AuthContext from '../../Context/auth/authContext'\r\nimport './dashboard.css'\r\n//import Card from './Card'\r\nimport Footer from './Footer'\r\n\r\n\r\nconst Dashboard = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { loadUser } = authContext;\r\n   \r\n\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"main__section\">\r\n                <h1>Feel Free to share</h1>\r\n                <img src={require('../image/background.png')} alt=\"1\" />\r\n            </section>\r\n            {/* <section className=\"card__area\">\r\n            \r\n                  <Card heading={\"Don't want to read\"}>\r\n                 We have reading assitance for you\r\n             </Card>\r\n                <Card heading={\"Create Free Blogs\"}>\r\n                    \r\n             </Card>\r\n                <Card heading={\"How Our Services\"}>\r\n                 Hello world\r\n             </Card>\r\n           \r\n            </section> */}\r\n            \r\n            {/* <section className=\"feedback__form\">\r\n                <div><h1>This is Feedback Form</h1></div>\r\n                <div><h1>This is Form Area</h1></div>\r\n            </section> */}\r\n            <Footer />\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport AuthContext from '../../Context/auth/authContext'\r\nimport PostContext from '../../Context/posts/postContext'\r\n//import AlertContext from '../../Context/alert/alertContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nconst Post = () => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const postContext = useContext(PostContext)\r\n    //const alertContext = useContext(AlertContext)\r\n    const { error, createPost, imageStatus, clearStatus } = postContext\r\n    const { isAuthenticated } = authContext\r\n    //const { setAlert } = alertContext\r\n\r\n    const [event, setEvent] = useState({\r\n        title: \"\",\r\n        info: \"\",\r\n        image: null,\r\n    });\r\n\r\n    const { info, title, image } = event\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (error === \"Post already with title\") {\r\n            // setAlert(error, 'danger')\r\n            toast.error(error)\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if (imageStatus) {\r\n            history.push('/')\r\n            toast.success(\"Post Created\")\r\n            clearStatus()\r\n            //clearStatus function make the imageStatus as false so that \r\n            //it can not be true \r\n        }\r\n\r\n    })\r\n\r\n    const TitleData = (e) => {\r\n        e.preventDefault();\r\n        //console.log(e.target.value)\r\n        setEvent({ ...event, title: e.target.value })\r\n    }\r\n\r\n\r\n\r\n    const getImage = (e) => {\r\n        e.preventDefault();\r\n        setEvent({ ...event, image: e.target.files[0] })\r\n    }\r\n\r\n\r\n\r\n    const submitForm = (e) => {\r\n       // console.log(\"e:\",e)\r\n        e.preventDefault();\r\n        if (info === '' || title === \"\") {\r\n            //setAlert('Fill All field', 'danger')\r\n            toast.warn('All fields required')\r\n        }\r\n        const data = new FormData();\r\n        data.append('image', image);\r\n        data.append('info', info)\r\n        data.append('title', title);\r\n        createPost(data);\r\n        // axios.post('/blog/create', data).then(res => {\r\n        //     console.log(res.statusText)\r\n        //     setState({ info: '', title: '', image: null, imageStatus: true })\r\n        // }).catch(err => console.log(err.message))\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return <h1>Not Authenticated...</h1>\r\n    }\r\n\r\n\r\n\r\n    const EditorData = (e, editor) => {\r\n        const titleData = editor.getData();\r\n        setEvent({ ...event, info: titleData })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container w-50  shadow global__margin\" >\r\n            <h2 className=\"text-center text-md\">Add <span style={{color:\"#0156ab\"}}>Post</span></h2>\r\n            <form  style={{ height: \"350px\" }} encType=\"multipart/form-data\">\r\n                <div className=\"form-group\">\r\n                    <label >Title</label>\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        value={event.title || ''}\r\n                        onChange={TitleData}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <label>Write Content</label>\r\n\r\n                    {/* <textarea className=\"form-control\"\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"3\"\r\n                        name=\"info\"\r\n                        onChange={onChange}\r\n\r\n                        value={event.info} /> */}\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        onChange={EditorData}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"custom-file mt-4\">\r\n                    <input type=\"file\"\r\n                        className=\"custom-file-input\"\r\n                        onChange={getImage}\r\n                        name=\"image\"\r\n                    />\r\n                  <span>size less than 2 mb</span>\r\n                </div>\r\n            \r\n                <button onClick={submitForm} className=\"btn btn-primary btn-block mt-4\">Submit</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useContext } from 'react'\r\nimport Moment from 'react-moment'\r\nimport PostContext from '../../Context/posts/postContext';\r\nimport { toast } from 'react-toastify'\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/singlePost.css'\r\n\r\nconst PostItem = ({ title, image, id, date }) => {\r\n    const postContext = useContext(PostContext);\r\n    const { deletePost } = postContext;\r\n\r\n    const deleteItem = () => {\r\n        deletePost(id)\r\n        \r\n        toast.success(\"Post delete SuccessFully\")\r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"container shadow\">\r\n            <div className=\"row row-cols-sm-2 row-cols-md-2 mx-auto mt-4\" style={{ boxShadow:\"11px 21px 0 hsla(180,9%,98%,.12), 0 6px 11px 0 rgba(0,0,0,.09)\"}}>\r\n                <div className=\"col\">\r\n                    <h1 className=\"text-wrap Capatilize\">{title}</h1>\r\n                    {/* <p className=\"text-justify text-break text-truncate font-weight-light\">{text}</p> */}\r\n                    <div className=\"btn-group mt-4\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                        <Link to={`/posts/${id}`} className=\"btn btn-inline-block btn-outline-success ml-2\" >Read</Link>\r\n                        <Link to=\"/\" className=\"btn btn-inline-block btn-outline-danger ml-2\" onClick={deleteItem}>Delete</Link>\r\n                    </div>\r\n                    <div className=\"pl-2 pt-4\">\r\n                        <p>Created At: <span> <Moment format=\"DD/MM/YYYY\">\r\n                           {date}\r\n                        </Moment></span> </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\" ml-auto\" style={{ width: \"250px\" }}>\r\n                    <img className=\"img-thumbnail\" src={image} alt={id} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport PostItem from './PostItem'\r\nimport AuthContext from '../../Context/auth/authContext';\r\nimport PostContext from '../../Context/posts/postContext';\r\nimport { Spinner } from 'react-bootstrap'\r\nconst ShowPost = () => {\r\n    const authContext = useContext(AuthContext)\r\n    const postContext = useContext(PostContext);\r\n    const { allposts, getData, loading, clearLoading , filterPost , filter ,  } = postContext\r\n    const { isAuthenticated, user } = authContext;\r\n\r\n    const id = user._id;\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    useEffect(() => {\r\n        getData(id)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            clearLoading();\r\n        }\r\n\r\n        //eslint-disable-next-line\r\n    }, [loading])\r\n\r\n    if (!isAuthenticated) {\r\n        return <h1>Access Denied...</h1>\r\n    }\r\n\r\n    \r\n    \r\n    const onChange = (e) => {\r\n        //console.log(e.target.value)\r\n        setText(e.target.value)\r\n    }\r\n    \r\n    const submitForm = () => {\r\n        filter(text)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <form className=\"container row\" style={{marginTop:\"80px\"}}>\r\n                <div className=\"form-group col-8\">\r\n                    <input className=\"form-control\" value={text} onChange={onChange} placeholder=\"Search Post...\" />\r\n                </div>\r\n                <div className=\"form-group col-4\">\r\n                    <input type=\"button\" value=\"Search\" onClick={submitForm} className=\"btn btn-block btn-dark\" />\r\n                </div>\r\n            </form>\r\n            {allposts.length === 0 ? <p className=\"pl-4  text-primary mt-2\">You have no post to show , Create one </p> : \"\"}\r\n            {loading ? <Spinner animation=\"border\" variant=\"dark\" /> : (\r\n                filterPost !== null ? filterPost.map(post => <PostItem\r\n                    key={post._id}\r\n                    image={post.image}\r\n                    title={post.title}\r\n                    info={post.info}\r\n                    date={post.date}\r\n                    id={post._id}\r\n                />) : allposts.map(post => <PostItem\r\n                    key={post._id}\r\n                    image={post.image}\r\n                    title={post.title}\r\n                    info={post.info}\r\n                    date={post.date}\r\n                    id={post._id}\r\n                />)\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPost\r\n\r\n\r\n    // (allposts.map(post => <PostItem\r\n    //     key={post._id}\r\n    //     image={post.image}\r\n    //     title={post.title}\r\n    //     info={post.info}\r\n    //     date={post.date}\r\n    //     id={post._id}\r\n    // />))","import React, { useContext, useEffect } from 'react'\r\n\r\nimport PostContext from '../../Context/posts/postContext';\r\nimport { Spinner } from 'react-bootstrap'\r\nimport Moment from 'react-moment'\r\n\r\nimport ReactHtmlParser from 'react-html-parser'\r\nconst SinglePost = (props) => {\r\n\r\n    const postContext = useContext(PostContext);\r\n    const { getSinglePost, singlePost } = postContext;\r\n    useEffect(() => {\r\n        (function () {\r\n            getSinglePost(props.match.params.id)\r\n        })()\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n      \r\n\r\n    const textToAudio = () => {\r\n        let msg = singlePost.info;\r\n        let speech = new SpeechSynthesisUtterance();\r\n        speech.lang = \"en-US\";\r\n        \r\n        speech.text = msg;\r\n        speech.volume = 1;\r\n        speech.rate = 0.8;\r\n        speech.pitch = 1;\r\n        window.speechSynthesis.speak(speech)\r\n    }\r\n\r\n    const AudioCancel = () => {\r\n        window.speechSynthesis.cancel();\r\n    }\r\n\r\n    if (singlePost !== null) {\r\n        // console.log(singlePost.title)\r\n        const { info, title, image, user, _id, date } = singlePost\r\n\r\n        return (\r\n            <div className=\"container w-75 shadow\" style={{marginTop:\"4.0rem\"}}>\r\n                \r\n                <div className=\"row\">\r\n                    <div>\r\n                        < h2 className=\"display-3\">{title}</h2>\r\n                        <p className=\"lead\">by {}<span className=\"text-muted\">{user.name}</span> </p>\r\n                        <p className=\"lead\">Posted on <span className=\"text-muted\"><Moment format=\"DD/MM/YYYY\">\r\n                            {date}\r\n                        </Moment>\r\n                        </span>\r\n                        </p>\r\n                    </div>\r\n                     <div>\r\n                    <button className=\"btn btn-sm btn-default\" onClick={textToAudio}>Listen</button>\r\n                    <button className=\"btn btn-sm btn-default\" onClick={AudioCancel}>Cancel</button>\r\n                    </div>\r\n                    <div className=\"d-block h-25\" >\r\n                        <img className=\"img-fluid max-width:100%\" src={image} alt={_id} />\r\n                    </div>\r\n                    <div className=\"lead text-justify mt-4\">{ReactHtmlParser(info)}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    return <Spinner animation=\"border\" variant=\"dark\" />\r\n}\r\n\r\n\r\n\r\n\r\nexport default SinglePost\r\n","import React , {useContext , Fragment} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from '../Context/auth/authContext'\r\n\r\nconst PrivateRoute = ({component : Component , ...rest}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const {isAuthenticated} = authContext;\r\n    return (\r\n        <Fragment>\r\n            <Route {...rest} render={props => !isAuthenticated ? (<Redirect  to='/login' />) : (<Component {...props}/>)}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport './SideLogo.css'\r\nconst tooglerBtn = props => (\r\n   <button className=\"toogler__btn\" onClick={props.click}>\r\n     <div className=\"toogle-btn__line\"></div>\r\n     <div className=\"toogle-btn__line\"></div>\r\n    <div className=\"toogle-btn__line\"></div>\r\n   </button>\r\n)\r\n\r\nexport default tooglerBtn","import React , {useContext , useEffect} from 'react'\r\nimport SideLogo from './SideLogo'\r\nimport AuthContext from '../../Context/auth/authContext'\r\nimport {toast} from 'react-toastify'\r\nimport {Link} from 'react-router-dom'\r\nconst Toolbar = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { isAuthenticated, logout, loadUser } = authContext\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n    const onLogout = () => {\r\n        logout()\r\n        toast.success('Successfully loggged out.')\r\n    }\r\n\r\n    return (\r\n        <header className=\"toolbar\">\r\n            <nav className=\"toolbar__navigation\">\r\n                <div className=\"toolbar__toogle__btn\">\r\n                    <SideLogo click={props.sideDrawerOpenerHandler} />\r\n                </div>\r\n                <div className=\"toolbar__logo\"><Link to=\"/\">HindiMedium</Link></div>\r\n                <div className=\"spacer\" />\r\n                <div className=\"toolbar__navigation-items\">\r\n                    {isAuthenticated !== true ? (\r\n                        <ul >\r\n                            <li>\r\n                                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link\" to=\"/register\">Sign up</Link>\r\n                            </li>\r\n                        </ul>\r\n                    ) : <ul className=\"nav align-center\">\r\n                            {/* <li className=\"lead text-light pt-1\">Welcome<span class=\"navbar-text\">{user.name}</span></li> */}\r\n                            <li className=\"nav-link text-light\"><Link to=\"/allposts\" style={{ textDecoration: \"none\" }}>Posts</Link></li>\r\n                            <li className=\"nav-link text-light\"><Link to=\"/posts\" style={{ textDecoration: \"none\" }}>Add Post</Link></li>\r\n                            <li className=\"nav-link text-light\"><Link to=\"/show\" style={{ textDecoration: \"none\" }}>My posts</Link></li>\r\n                            <button className=\" btn btn-sm btn-outline-danger\" onClick={onLogout}>Logout</button>\r\n                        </ul>}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n     \r\n}\r\n   \r\n\r\n\r\nexport default Toolbar\r\n","import React , {useContext, useEffect} from 'react'\r\nimport './SideDrawer.css'\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../../Context/auth/authContext'\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nconst SideDrawer =  props => {\r\n    const authContext = useContext(AuthContext);\r\n    const { isAuthenticated , logout , loadUser , user} = authContext;\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onLogout = () => {\r\n        logout();\r\n        toast.success('Successfully logout out...')\r\n        \r\n    }\r\n\r\n    let username;\r\n\r\n    if(user !== null) {\r\n          username = user.name\r\n    }\r\n\r\n    let drawerClasess = 'side__drawer'\r\n    if(props.show) {\r\n        drawerClasess = 'side__drawer open'\r\n    }\r\n    return  (\r\n        <div className={drawerClasess}>\r\n            {isAuthenticated !== true ? (\r\n                <ul >\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/register\">Sign up</Link>\r\n                    </li>\r\n                </ul>\r\n            ) : <ul className=\"nav align-center\">\r\n                    <li style={{paddingLeft:\"20px\"}}>Welcome {} {username}</li>\r\n                    {/* <li className=\"lead text-light pt-1\">Welcome<span class=\"navbar-text\">{user.name}</span></li> */}\r\n                    <li className=\"nav-link text-light\"><Link to=\"/posts\" style={{ textDecoration: \"none\" }}>Add Post</Link></li>\r\n                    <li className=\"nav-link text-light\"><Link to=\"/show\" style={{ textDecoration: \"none\" }}>My Post</Link></li>\r\n                     <li className=\"nav-link text-light\"><Link to=\"allposts\" style={{ textDecoration: \"none\" }}>Posts</Link></li>\r\n                    <li className=\"ml-4\"><button className=\"btn btn-sm btn-danger\" onClick={onLogout}>Logout</button></li>\r\n                </ul>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SideDrawer","import React  from 'react'\r\nimport './postcard.css'\r\nimport Moment from 'react-moment'\r\n// import ReactHtmlParser from 'react-html-parser'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Postcard = ({image , title ,date, id  }) => {\r\n     \r\n\r\n    return (\r\n        <div className=\"container h-32 shadow\">\r\n            <div className=\"row row-cols-sm-2 row-cols-md-2 mx-auto mt-4\">\r\n                <div className=\"col\">\r\n                    <h1 className=\"text-wrap Capatilize\">{title}</h1>\r\n                    {/* <p className=\"text-justify text-break text-truncate font-weight-light\">{ReactHtmlParser(info)}</p> */}\r\n                    <div className=\"btn-group mt-4\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                        <Link to={`/posts/${id}`} className=\"btn btn-inline-block btn-outline-success ml-2\" >Read</Link>\r\n                    </div>\r\n                    <div className=\"pl-2 pt-4\">\r\n                        <p>Created At: <span> <Moment format=\"DD/MM/YYYY\">\r\n                            {date}\r\n                        </Moment></span> </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\" ml-auto\" style={{ width: \"250px\" }} >\r\n                   <img className=\"img-thumbnail\" src={image} alt={id} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Postcard\r\n","import React , {useContext , useEffect} from 'react'\r\nimport PostContext from '../../Context/posts/postContext'\r\nimport './postcard.css'\r\nimport PostCard from './Postcard'\r\nimport { Spinner } from 'react-bootstrap'\r\nconst DashboardPost = () => {\r\n    const postContext = useContext(PostContext)\r\n    const { loading, allposts, GetAllPosts , clearLoading} = postContext\r\n    \r\n    useEffect(() => {\r\n        GetAllPosts();\r\n        \r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n     useEffect(() => {\r\n        if (loading) {\r\n            clearLoading();\r\n        }\r\n\r\n        //eslint-disable-next-line\r\n    }, [loading])\r\n   \r\n    if(loading) {\r\n          return <Spinner animation=\"border\" variant=\"dark\" />\r\n    }\r\n  \r\n    \r\n    return (\r\n        <div className=\" main__card \" style={componetClass}>\r\n             {allposts.map(post => <PostCard\r\n             title={post.title}\r\n             id={post._id}\r\n             info={post.info}\r\n             image={post.image}\r\n             date={post.date}\r\n             key={post._id.toString()}\r\n              />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst componetClass = {\r\nwidth: \"80%\",\r\n\r\nzIndex: -1,\r\ntransform: \"translate(-50 %, -50 %)\",\r\nleft: \"50%\",\r\ntop: \"110%\",\r\nmargin:\"60px auto\",\r\nboxShadow: \"11px 21px 0 hsla(180,9%,98%,.12), 0 6px 11px 0 rgba(0,0,0,.09)\",\r\n\r\n}\r\n\r\nexport default DashboardPost\r\n","import React from 'react'\r\nimport './Backdrop.css'\r\nconst backDrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click}></div>\r\n)\r\n\r\nexport default backDrop","import React , {useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\n//import Navbar from './Components/layout/Navbar'\r\nimport Register from './Components/User/RegisterForm'\r\nimport Login from './Components/User/LoginForm'\r\nimport AuthState from './Context/auth/AuthState'\r\nimport AlertState from './Context/alert/AlertState'\r\nimport PostState from './Context/posts/PostState'\r\nimport Alert from './Components/Alert/Alert'\r\nimport setAuthToken from './Context/utils/setAuthToekn'\r\nimport Dashboad from './Components/layout/Dashboard'\r\n// import Forgot from './Components/Reset/Forgot'\r\n// import Reset2 from './Components/Reset/Reset2'\r\nimport Post from './Components/post/Post'\r\nimport ShowPost from './Components/post/ShowPost'\r\nimport SinglePost from './Components/post/SinglePost'\r\nimport PrivateRoute from './Components/privateRoute'\r\n//import Bootstrap from './Components/Bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\n//import Single from './Components/NavComponent/Single'\r\nimport ToolBar from './Components/Toolbar/Toolbar'\r\nimport './Components/Toolbar/Toolbar.css'\r\nimport SideDrawer from './Components/Toolbar/SideDrawer'\r\nimport DashboardPost  from './Components/post/DashboardPost'\r\n// import Footer from './Components/layout/Footer'\r\n\r\n\r\nimport Backdrop from './Components/Backdrop/Backdrop'\r\nfunction App() {\r\n\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token)\r\n  }\r\n\r\n  const [open, setOpen] = useState({\r\n    sideDrawerOpener: false\r\n  });\r\n\r\n\r\n  const sideDrawerOpenerHandler = () => {\r\n    setOpen({ sideDrawerOpener: !open.sideDrawerOpener })\r\n  }\r\n\r\n  const backDropHandler = () => {\r\n    setOpen({ sideDrawer: false })\r\n  }\r\n\r\n  let backDrop;\r\n\r\n  if (open.sideDrawerOpener) {\r\n\r\n    backDrop = <Backdrop click={backDropHandler} />\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <AuthState>\r\n      <AlertState>\r\n        <PostState>\r\n          <Router>\r\n              <ToolBar sideDrawerOpenerHandler={sideDrawerOpenerHandler} />\r\n              <SideDrawer show={open.sideDrawerOpener} />\r\n              {backDrop}\r\n            <Alert />\r\n            <Switch>\r\n              {/* <Route exact path=\"/bootstrap\" component={Bootstrap} /> */}\r\n              <Route exact path=\"/\" component={Dashboad} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <PrivateRoute exact path=\"/allposts\" component={DashboardPost} />\r\n              {/* <Route exact path=\"/forgot\" component={Forgot} />\r\n              <Route exact path=\"/reset/:token\" component={Reset2} /> */}\r\n              <PrivateRoute exact path=\"/posts/:id\" component={SinglePost} />\r\n              <PrivateRoute exact path=\"/posts\" component={Post} />\r\n              <PrivateRoute exact path='/show' component={ShowPost} />\r\n            </Switch>\r\n            {/* <Footer /> */}\r\n          </Router>\r\n        </PostState>\r\n      </AlertState>\r\n      <ToastContainer autoClose={2000} />\r\n    </AuthState>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './App.css'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'popper.js'\r\nimport 'bootstrap/dist/js/bootstrap'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}